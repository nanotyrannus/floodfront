/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../app/map/marker-note.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '../../../app/shared/rest.service';
import * as import9 from '../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import10 from '../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import11 from '../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import12 from '@angular/core/src/change_detection/change_detection_util';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/forms/src/directives/default_value_accessor';
import * as import15 from '@angular/forms/src/directives/control_value_accessor';
import * as import16 from '@angular/forms/src/directives/ng_model';
import * as import17 from '@angular/forms/src/directives/ng_control';
import * as import18 from '@angular/forms/src/directives/ng_control_status';
import * as import19 from '@angular/core/src/security';
var Wrapper_MarkerNoteComponent = (function () {
    function Wrapper_MarkerNoteComponent(p0) {
        this._changed = false;
        this.context = new import0.MarkerNoteComponent(p0);
    }
    Wrapper_MarkerNoteComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_MarkerNoteComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_MarkerNoteComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_MarkerNoteComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_MarkerNoteComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_MarkerNoteComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_MarkerNoteComponent;
}());
export { Wrapper_MarkerNoteComponent };
var renderType_MarkerNoteComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_MarkerNoteComponent_Host0 = (function (_super) {
    __extends(View_MarkerNoteComponent_Host0, _super);
    function View_MarkerNoteComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_MarkerNoteComponent_Host0, renderType_MarkerNoteComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_MarkerNoteComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'marker-note', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_MarkerNoteComponent0(this.viewUtils, this, 0, this._el_0);
        this._MarkerNoteComponent_0_3 = new Wrapper_MarkerNoteComponent(this.injectorGet(import8.RestService, this.parentIndex));
        this.compView_0.create(this._MarkerNoteComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._MarkerNoteComponent_0_3.context);
    };
    View_MarkerNoteComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.MarkerNoteComponent) && (0 === requestNodeIndex))) {
            return this._MarkerNoteComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_MarkerNoteComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._MarkerNoteComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_MarkerNoteComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_MarkerNoteComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_MarkerNoteComponent_Host0;
}(import1.AppView));
export var MarkerNoteComponentNgFactory = new import7.ComponentFactory('marker-note', View_MarkerNoteComponent_Host0, import0.MarkerNoteComponent);
var styles_MarkerNoteComponent = [];
var renderType_MarkerNoteComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_MarkerNoteComponent, {});
var View_MarkerNoteComponent0 = (function (_super) {
    __extends(View_MarkerNoteComponent0, _super);
    function View_MarkerNoteComponent0(viewUtils, parentView, parentIndex, parentElement) {
        var _this = _super.call(this, View_MarkerNoteComponent0, renderType_MarkerNoteComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
        _this._expr_15 = import12.UNINITIALIZED;
        return _this;
    }
    View_MarkerNoteComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'marker-note-container'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'textarea', new import3.InlineArray2(2, 'style', 'width: 100%; height: 80%;'), null);
        this._DefaultValueAccessor_2_3 = new import9.Wrapper_DefaultValueAccessor(this.renderer, new import13.ElementRef(this._el_2));
        this._NG_VALUE_ACCESSOR_2_4 = [this._DefaultValueAccessor_2_3.context];
        this._NgModel_2_5 = new import10.Wrapper_NgModel(null, null, null, this._NG_VALUE_ACCESSOR_2_4);
        this._NgControl_2_6 = this._NgModel_2_5.context;
        this._NgControlStatus_2_7 = new import11.Wrapper_NgControlStatus(this._NgControl_2_6);
        this._text_3 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_4 = import3.createRenderElement(this.renderer, this._el_0, 'button', new import3.InlineArray4(4, 'class', 'btn btn-primary', 'style', 'width: 49%'), null);
        this._text_5 = this.renderer.createText(this._el_4, 'Submit', null);
        this._text_6 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_0, 'button', new import3.InlineArray4(4, 'class', 'btn btn-secondary', 'style', 'width: 49%'), null);
        this._text_8 = this.renderer.createText(this._el_7, 'Cancel', null);
        this._text_9 = this.renderer.createText(this._el_0, '\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_2, new import3.InlineArray8(6, 'ngModelChange', null, 'input', null, 'blur', null), this.eventHandler(this.handleEvent_2));
        this._NgModel_2_5.subscribe(this, this.eventHandler(this.handleEvent_2), true);
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_4, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_4));
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_7, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_7));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._text_9
        ]), [
            disposable_0,
            disposable_1,
            disposable_2
        ]);
        return null;
    };
    View_MarkerNoteComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.DefaultValueAccessor) && (2 === requestNodeIndex))) {
            return this._DefaultValueAccessor_2_3.context;
        }
        if (((token === import15.NG_VALUE_ACCESSOR) && (2 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_2_4;
        }
        if (((token === import16.NgModel) && (2 === requestNodeIndex))) {
            return this._NgModel_2_5.context;
        }
        if (((token === import17.NgControl) && (2 === requestNodeIndex))) {
            return this._NgControl_2_6;
        }
        if (((token === import18.NgControlStatus) && (2 === requestNodeIndex))) {
            return this._NgControlStatus_2_7.context;
        }
        return notFoundResult;
    };
    View_MarkerNoteComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this._DefaultValueAccessor_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        var currVal_2_1_0 = this.context.description;
        this._NgModel_2_5.check_model(currVal_2_1_0, throwOnChange, false);
        this._NgModel_2_5.ngDoCheck(this, this._el_2, throwOnChange);
        this._NgControlStatus_2_7.ngDoCheck(this, this._el_2, throwOnChange);
        var currVal_15 = this.context.display;
        if (import3.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this.renderer.setElementStyle(this._el_0, 'display', ((this.viewUtils.sanitizer.sanitize(import19.SecurityContext.STYLE, currVal_15) == null) ? null : this.viewUtils.sanitizer.sanitize(import19.SecurityContext.STYLE, currVal_15).toString()));
            this._expr_15 = currVal_15;
        }
        this._NgControlStatus_2_7.checkHost(this, this, this._el_2, throwOnChange);
    };
    View_MarkerNoteComponent0.prototype.destroyInternal = function () {
        this._NgModel_2_5.ngOnDestroy();
    };
    View_MarkerNoteComponent0.prototype.handleEvent_2 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        result = (this._DefaultValueAccessor_2_3.handleEvent(eventName, $event) && result);
        if ((eventName == 'ngModelChange')) {
            var pd_sub_0 = ((this.context.description = $event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_MarkerNoteComponent0.prototype.handleEvent_4 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.submit() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_MarkerNoteComponent0.prototype.handleEvent_7 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.close() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_MarkerNoteComponent0;
}(import1.AppView));
export { View_MarkerNoteComponent0 };
//# sourceMappingURL=marker-note.component.ngfactory.js.map