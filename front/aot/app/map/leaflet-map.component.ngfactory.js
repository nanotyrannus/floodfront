/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as import0 from '../../../app/map/leaflet-map.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/constants';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/router/src/router';
import * as import9 from '../../../app/event/event.service';
import * as import10 from '../../../app/user/user.service';
import * as import11 from '../../../app/shared/rest.service';
import * as import12 from '../../../app/shared/navigation.service';
import * as import13 from '../../../app/shared/cookie.service';
import * as import14 from '@angular/core/src/zone/ng_zone';
import * as import15 from '@angular/core/src/linker/query_list';
import * as import16 from '../../../app/map/popup.component';
import * as import17 from './popup.component.ngfactory';
import * as import18 from '../../../app/map/marker-menu.component';
import * as import19 from './marker-menu.component.ngfactory';
import * as import20 from '../../../app/map/marker-note.component';
import * as import21 from './marker-note.component.ngfactory';
import * as import22 from '@angular/core/src/linker/element_ref';
var Wrapper_LeafletMapComponent = (function () {
    function Wrapper_LeafletMapComponent(p0, p1, p2, p3, p4, p5, p6) {
        this._changed = false;
        this.context = new import0.LeafletMapComponent(p0, p1, p2, p3, p4, p5, p6);
    }
    Wrapper_LeafletMapComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_LeafletMapComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_LeafletMapComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_LeafletMapComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_LeafletMapComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_LeafletMapComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_LeafletMapComponent;
}());
export { Wrapper_LeafletMapComponent };
var renderType_LeafletMapComponent_Host = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, [], {});
var View_LeafletMapComponent_Host0 = (function (_super) {
    __extends(View_LeafletMapComponent_Host0, _super);
    function View_LeafletMapComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_LeafletMapComponent_Host0, renderType_LeafletMapComponent_Host, import5.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_LeafletMapComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'leaflet-component', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_LeafletMapComponent0(this.viewUtils, this, 0, this._el_0);
        this._LeafletMapComponent_0_3 = new Wrapper_LeafletMapComponent(this.injectorGet(import8.Router, this.parentIndex), this.injectorGet(import9.EventService, this.parentIndex), this.injectorGet(import10.UserService, this.parentIndex), this.injectorGet(import11.RestService, this.parentIndex), this.injectorGet(import12.NavigationService, this.parentIndex), this.injectorGet(import13.CookieService, this.parentIndex), this.injectorGet(import14.NgZone, this.parentIndex));
        this.compView_0.create(this._LeafletMapComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._LeafletMapComponent_0_3.context);
    };
    View_LeafletMapComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.LeafletMapComponent) && (0 === requestNodeIndex))) {
            return this._LeafletMapComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_LeafletMapComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._LeafletMapComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_LeafletMapComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_LeafletMapComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_LeafletMapComponent_Host0;
}(import1.AppView));
export var LeafletMapComponentNgFactory = new import7.ComponentFactory('leaflet-component', View_LeafletMapComponent_Host0, import0.LeafletMapComponent);
var styles_LeafletMapComponent = [];
var renderType_LeafletMapComponent = import3.createRenderComponentType('', 0, import4.ViewEncapsulation.None, styles_LeafletMapComponent, {});
var View_LeafletMapComponent0 = (function (_super) {
    __extends(View_LeafletMapComponent0, _super);
    function View_LeafletMapComponent0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_LeafletMapComponent0, renderType_LeafletMapComponent, import5.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import6.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_LeafletMapComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_PopupComponent_0 = new import15.QueryList();
        this._viewQuery_MarkerMenuComponent_1 = new import15.QueryList();
        this._viewQuery_MarkerNoteComponent_2 = new import15.QueryList();
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'map-context-menu'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n\n', null);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_3 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray4(4, 'class', 'map-button-container', 'style', 'bottom: 20px; right: 10px;'), null);
        this._text_4 = this.renderer.createText(this._el_3, '\n', null);
        this._el_5 = import3.createRenderElement(this.renderer, this._el_3, 'button', new import3.InlineArray2(2, 'class', 'map-button btn'), null);
        this._el_6 = import3.createRenderElement(this.renderer, this._el_5, 'img', new import3.InlineArray2(2, 'src', '/assets/images/marker_walkable.svg'), null);
        this._text_7 = this.renderer.createText(this._el_3, '\n', null);
        this._el_8 = import3.createRenderElement(this.renderer, this._el_3, 'button', new import3.InlineArray2(2, 'class', 'map-button btn'), null);
        this._el_9 = import3.createRenderElement(this.renderer, this._el_8, 'img', new import3.InlineArray2(2, 'src', '/assets/images/marker_border.svg'), null);
        this._text_10 = this.renderer.createText(this._el_3, '\n', null);
        this._el_11 = import3.createRenderElement(this.renderer, this._el_3, 'button', new import3.InlineArray2(2, 'class', 'map-button btn'), null);
        this._el_12 = import3.createRenderElement(this.renderer, this._el_11, 'img', new import3.InlineArray2(2, 'src', '/assets/images/marker_flood.svg'), null);
        this._text_13 = this.renderer.createText(this._el_3, '\n', null);
        this._text_14 = this.renderer.createText(this._el_3, '\n', null);
        this._el_15 = import3.createRenderElement(this.renderer, this._el_3, 'button', new import3.InlineArray2(2, 'class', 'map-button btn'), null);
        this._text_16 = this.renderer.createText(this._el_15, '\n    ', null);
        this._el_17 = import3.createRenderElement(this.renderer, this._el_15, 'img', new import3.InlineArray4(4, 'src', '/assets/images/info.svg', 'style', 'width: 100%;'), null);
        this._text_18 = this.renderer.createText(this._el_15, '\n', null);
        this._text_19 = this.renderer.createText(this._el_3, '\n', null);
        this._text_20 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_21 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray4(4, 'class', 'map-button-container', 'style', 'bottom: 20px; left: 10px;'), null);
        this._text_22 = this.renderer.createText(this._el_21, '\n', null);
        this._el_23 = import3.createRenderElement(this.renderer, this._el_21, 'button', new import3.InlineArray2(2, 'class', 'map-button btn'), null);
        this._text_24 = this.renderer.createText(this._el_23, '\n    ', null);
        this._el_25 = import3.createRenderElement(this.renderer, this._el_23, 'span', new import3.InlineArray2(2, 'class', 'glyphicon glyphicon-chevron-left'), null);
        this._text_26 = this.renderer.createText(this._el_23, '\n', null);
        this._text_27 = this.renderer.createText(this._el_21, '\n', null);
        this._text_28 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_29 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray4(4, 'class', 'map-button-container', 'style', 'bottom: 12%; right: 10px;'), null);
        this._text_30 = this.renderer.createText(this._el_29, '\n', null);
        this._el_31 = import3.createRenderElement(this.renderer, this._el_29, 'button', new import3.InlineArray2(2, 'class', 'map-button btn'), null);
        this._el_32 = import3.createRenderElement(this.renderer, this._el_31, 'img', new import3.InlineArray2(2, 'src', '/assets/images/crosshair.svg'), null);
        this._text_33 = this.renderer.createText(this._el_29, '\n', null);
        this._text_34 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_35 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'id', 'map'), null);
        this._text_36 = this.renderer.createText(parentRenderNode, '\n', null);
        this._text_37 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_38 = import3.createRenderElement(this.renderer, parentRenderNode, 'popup', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_38 = new import17.View_PopupComponent0(this.viewUtils, this, 38, this._el_38);
        this._PopupComponent_38_3 = new import17.Wrapper_PopupComponent(new import22.ElementRef(this._el_38));
        this.compView_38.create(this._PopupComponent_38_3.context);
        this._text_39 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_40 = import3.createRenderElement(this.renderer, parentRenderNode, 'marker-menu', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_40 = new import19.View_MarkerMenuComponent0(this.viewUtils, this, 40, this._el_40);
        this._MarkerMenuComponent_40_3 = new import19.Wrapper_MarkerMenuComponent();
        this.compView_40.create(this._MarkerMenuComponent_40_3.context);
        this._text_41 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_42 = import3.createRenderElement(this.renderer, parentRenderNode, 'marker-note', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_42 = new import21.View_MarkerNoteComponent0(this.viewUtils, this, 42, this._el_42);
        this._MarkerNoteComponent_42_3 = new import21.Wrapper_MarkerNoteComponent(this.parentView.injectorGet(import11.RestService, this.parentIndex));
        this.compView_42.create(this._MarkerNoteComponent_42_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_5, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_5));
        var disposable_1 = import3.subscribeToRenderElement(this, this._el_8, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_8));
        var disposable_2 = import3.subscribeToRenderElement(this, this._el_11, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_11));
        var disposable_3 = import3.subscribeToRenderElement(this, this._el_15, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_15));
        var disposable_4 = import3.subscribeToRenderElement(this, this._el_23, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_23));
        var disposable_5 = import3.subscribeToRenderElement(this, this._el_31, new import3.InlineArray2(2, 'click', null), this.eventHandler(this.handleEvent_31));
        var disposable_6 = import3.subscribeToRenderElement(this, this._el_40, new import3.InlineArray2(2, 'onMarkerPicked', null), this.eventHandler(this.handleEvent_40));
        this._MarkerMenuComponent_40_3.subscribe(this, this.eventHandler(this.handleEvent_40), true);
        this._viewQuery_PopupComponent_0.reset([this._PopupComponent_38_3.context]);
        this.context.popup = this._viewQuery_PopupComponent_0.first;
        this._viewQuery_MarkerMenuComponent_1.reset([this._MarkerMenuComponent_40_3.context]);
        this.context.markerMenu = this._viewQuery_MarkerMenuComponent_1.first;
        this._viewQuery_MarkerNoteComponent_2.reset([this._MarkerNoteComponent_42_3.context]);
        this.context.markerNote = this._viewQuery_MarkerNoteComponent_2.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._el_6,
            this._text_7,
            this._el_8,
            this._el_9,
            this._text_10,
            this._el_11,
            this._el_12,
            this._text_13,
            this._text_14,
            this._el_15,
            this._text_16,
            this._el_17,
            this._text_18,
            this._text_19,
            this._text_20,
            this._el_21,
            this._text_22,
            this._el_23,
            this._text_24,
            this._el_25,
            this._text_26,
            this._text_27,
            this._text_28,
            this._el_29,
            this._text_30,
            this._el_31,
            this._el_32,
            this._text_33,
            this._text_34,
            this._el_35,
            this._text_36,
            this._text_37,
            this._el_38,
            this._text_39,
            this._el_40,
            this._text_41,
            this._el_42
        ]), [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5,
            disposable_6
        ]);
        return null;
    };
    View_LeafletMapComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.PopupComponent) && (38 === requestNodeIndex))) {
            return this._PopupComponent_38_3.context;
        }
        if (((token === import18.MarkerMenuComponent) && (40 === requestNodeIndex))) {
            return this._MarkerMenuComponent_40_3.context;
        }
        if (((token === import20.MarkerNoteComponent) && (42 === requestNodeIndex))) {
            return this._MarkerNoteComponent_42_3.context;
        }
        return notFoundResult;
    };
    View_LeafletMapComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_38_0_0 = this.context.clickX;
        this._PopupComponent_38_3.check_x(currVal_38_0_0, throwOnChange, false);
        var currVal_38_0_1 = this.context.clickY;
        this._PopupComponent_38_3.check_y(currVal_38_0_1, throwOnChange, false);
        this._PopupComponent_38_3.ngDoCheck(this, this._el_38, throwOnChange);
        this._MarkerMenuComponent_40_3.ngDoCheck(this, this._el_40, throwOnChange);
        this._MarkerNoteComponent_42_3.ngDoCheck(this, this._el_42, throwOnChange);
        this.compView_38.internalDetectChanges(throwOnChange);
        this.compView_40.internalDetectChanges(throwOnChange);
        this.compView_42.internalDetectChanges(throwOnChange);
    };
    View_LeafletMapComponent0.prototype.destroyInternal = function () {
        this.compView_38.destroy();
        this.compView_40.destroy();
        this.compView_42.destroy();
        this._MarkerMenuComponent_40_3.ngOnDestroy();
    };
    View_LeafletMapComponent0.prototype.handleEvent_5 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.primeMarker(this.context.markerTypeRef.WALKABLE) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_LeafletMapComponent0.prototype.handleEvent_8 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.primeMarker(this.context.markerTypeRef.BORDER) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_LeafletMapComponent0.prototype.handleEvent_11 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.primeMarker(this.context.markerTypeRef.FLOOD) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_LeafletMapComponent0.prototype.handleEvent_15 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.toggleInfo() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_LeafletMapComponent0.prototype.handleEvent_23 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.gotoEvents() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_LeafletMapComponent0.prototype.handleEvent_31 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.centerMap() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    View_LeafletMapComponent0.prototype.handleEvent_40 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'onMarkerPicked')) {
            var pd_sub_0 = (this.context.onMarkerPicked($event) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_LeafletMapComponent0;
}(import1.AppView));
export { View_LeafletMapComponent0 };
//# sourceMappingURL=leaflet-map.component.ngfactory.js.map